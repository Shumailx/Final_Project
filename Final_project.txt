This project is based on online progress tracking app
Members of group:M.Shumail,Atta ur Rehman Hanzla
Roll no:32,18
1)User_authentication:
#include <iostream>
#include <vector>
#include <string>

using namespace std;

class User {
private:
    string username;
    string password;

public:
    User(const string& username, const string& password) : username(username), password(password) {}

    const string& getUsername() const {
        return username;
    }

    const string& getPassword() const {
        return password;
    }
2)User_Profile:
class User {
private:
    string username;
    string password;

public:
    User(const string& username, const string& password) : username(username), password(password) {}

    const string& getUsername() const {
        return username;
    }

    const string& getPassword() const {
        return password;
    }
3)Goal_setting:
class GoalSetting {
private:
    struct Goal {
        string username;
        string goal;

        Goal(const string& u, const string& g) : username(u), goal(g) {}
    };

    vector<Goal> goals;

public:
    void setGoal(const string& username, const string& goal) {
        goals.push_back(Goal(username, goal));
        cout << "Goal set successfully for user " << username << ".\n";
    }

    void displayGoals(const string& username) {
        cout << "Goals for user " << username << ":\n";
        for (const auto& goal : goals) {
            if (goal.username == username) {
                cout << "- " << goal.goal << endl;
            }
        }
    }
4)Progress_Tracking:
class ProgressTracking {
private:
    struct Progress {
        string goal;
        int percentage;

        Progress(const string& g, int p) : goal(g), percentage(p) {}
    };

    vector<Progress> progress;

public:
    void trackProgress(const string& goal, int percentage) {
        progress.push_back(Progress(goal, percentage));
        cout << "Progress tracked for goal '" << goal << "': " << percentage << "% completed.\n";
    }

    void displayProgress(const string& goal) {
        cout << "Progress for goal '" << goal << "': ";
        for (const auto& p : progress) {
            if (p.goal == goal) {
                cout << p.percentage << "% completed\n";
                return;
            }
        }
        cout << "Not tracked yet\n";
    }